Script started on Wed 16 Nov 2022 05:32:14 PM EST
==132600== Memcheck, a memory error detector
==132600== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==132600== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==132600== Command: ms
==132600== 
ReadWrite Test.......................................
Testing operator<< overload (pass 1): 
These two outputs should match
Output 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
* * *
*   *
* * *
3,3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
30,3
Output 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
* * *
*   *
* * *
3,3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
30,3
**************************************************************
Press Enter to continue.
Testing operator<< overload (pass 2): 
These two outputs should match
Output 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
3,3
30,3
ÿOutput 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
3,3
30,3
**************************************************************
Press Enter to continue.
Testing operator>> overload (pass 1): 
Enter the following: 
4 <ENTER>
5 <ENTER>
Width: 4
Height: 5
* * * *
*     *
*     *
*     *
* * * *
Press Enter to continue.Testing operator>> overload (pass 2): 
These two outputs should match
Output 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
3,3
30,3
Output 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
3,3
30,3
**************************************************************
.....................................................

Vehicle Test.........................................
Invalid Vehicle Printing:
Invalid Vehicle Object

Reading vehicle from console: 
Enter:
abc<ENTER>
abc<ENTER>
Enter License Plate Number: abc
Enter Make and Model: abc
Printing a Vehicle that is not parked:
Parking Spot Number: N/A
License Plate: ABC
Make and Model: abc

Printing a Vehicle that is parked in the spot number 12:
Parking Spot Number: 12
License Plate: ABC
Make and Model: abc

Reading and Writing Comma Separated values: 
Enter: 
123,abcd,abcd,<ENTER>
123,abcd,abcd,
123,ABCD,abcd,
opeator== (cstring):
operator== with cstring works
opeator== (Vehicle):
operator== with Vehicle works
Construction validations:
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Input validations: 
Enter: 
123456789<ENTER>
abc<ENTER>
abc<ENTER>
Enter License Plate Number: 123456789
Invalid License Plate, try again: abc
Enter Make and Model: abc
Parking Spot Number: N/A
License Plate: ABC
Make and Model: abc

Enter: 
abc<ENTER>
a<ENTER>
ab<ENTER>
Enter License Plate Number: abc
Enter Make and Model: a
Invalid Make and Model, try again: ab
Parking Spot Number: N/A
License Plate: ABC
Make and Model: ab

Testing setParkingSpot validation: 
Valid setting: 
Parking Spot Number: 20
License Plate: ABC
Make and Model: ab

invalid setting: 
Invalid Vehicle Object

.....................................................
==132600== 
==132600== HEAP SUMMARY:
==132600==     in use at exit: 0 bytes in 0 blocks
==132600==   total heap usage: 28 allocs, 28 frees, 100,057 bytes allocated
==132600== 
==132600== All heap blocks were freed -- no leaks are possible
==132600== 
==132600== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Script done on Wed 16 Nov 2022 05:32:46 PM EST
