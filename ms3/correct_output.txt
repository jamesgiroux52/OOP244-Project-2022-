Script started on Fri 11 Nov 2022 11:53:10 PM EST
==236273== Memcheck, a memory error detector
==236273== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==236273== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==236273== Command: ws
==236273== 
ReadWrite Test.......................................
Testing operator<< overload (pass 1): 
These two outputs should match
Output 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
* * *
*   *
* * *
3,3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
30,3
Output 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
* * *
*   *
* * *
3,3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
30,3
**************************************************************
Press Enter to continue.
Testing operator<< overload (pass 2): 
These two outputs should match
Output 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
3,3
30,3
ÿOutput 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
3,3
30,3
**************************************************************
Press Enter to continue.
Testing operator>> overload (pass 1): 
Enter the following: 
4 <ENTER>
5 <ENTER>
Width: 4
Height: 5
* * * *
*     *
*     *
*     *
* * * *
Press Enter to continue.Testing operator>> overload (pass 2): 
These two outputs should match
Output 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
3,3
30,3
Output 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
3,3
30,3
**************************************************************
.....................................................

Vehicle Test.........................................
Invalid Vehicle Printing:
Invalid Vehicle Object

Reading vehicle from console: 
Enter:
abc<ENTER>
abc<ENTER>
Enter Licence Plate Number: abc
Enter Make and Model: abc
Printing a Vehicle that is not parked:
Parking Spot Number: N/A
Licence Plate: ABC
Make and Model: abc

Printing a Vehicle that is parked in the spot number 12:
Parking Spot Number: 12
Licence Plate: ABC
Make and Model: abc

Reading and Writing Comma Separated values: 
Enter: 
123,abcd,abcd,<ENTER>
123,abcd,abcd,
123,ABCD,abcd,
opeator== (cstring):
operator== with cstring works
opeator== (Vehicle):
operator== with Vehicle works
Construction validations:
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Invalid Vehicle Object
Input validations: 
Enter: 
123456789<ENTER>
abc<ENTER>
abc<ENTER>
Enter Licence Plate Number: 123456789
Invalid Licence Plate, try again: abc
Enter Make and Model: abc
Parking Spot Number: N/A
Licence Plate: ABC
Make and Model: abc

Enter: 
abc<ENTER>
a<ENTER>
ab<ENTER>
Enter Licence Plate Number: abc
Enter Make and Model: a
Invalid Make and model, try again: ab
Parking Spot Number: N/A
Licence Plate: ABC
Make and Model: ab

Testing setParkingSpot validation: 
Valid setting: 
Parking Spot Number: 20
Licence Plate: ABC
Make and Model: ab

invalid setting: 
Invalid Vehicle Object

.....................................................
==236273== 
==236273== HEAP SUMMARY:
==236273==     in use at exit: 0 bytes in 0 blocks
==236273==   total heap usage: 20 allocs, 20 frees, 99,257 bytes allocated
==236273== 
==236273== All heap blocks were freed -- no leaks are possible
==236273== 
==236273== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Script done on Fri 11 Nov 2022 11:53:52 PM EST
